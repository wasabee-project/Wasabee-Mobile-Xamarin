<?xml version="1.0" encoding="UTF-8"?>
<views:BaseDialogPage x:TypeArguments="viewModels:MarkerAssignmentDialogViewModel" xmlns="http://xamarin.com/schemas/2014/forms" 
                      xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                      xmlns:views="clr-namespace:Rocks.Wasabee.Mobile.Core.Ui.Views;assembly=Rocks.Wasabee.Mobile.Core.Ui"
                      xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
                      xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
                      xmlns:viewModels="clr-namespace:Rocks.Wasabee.Mobile.Core.ViewModels.Dialogs;assembly=Rocks.Wasabee.Mobile.Core"
                      xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
                      xmlns:iconize="clr-namespace:Plugin.Iconize;assembly=Plugin.Iconize"
                      xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
                      xmlns:converters="clr-namespace:Rocks.Wasabee.Mobile.Core.Ui.Helpers.Converters;assembly=Rocks.Wasabee.Mobile.Core.Ui"
                      x:Class="Rocks.Wasabee.Mobile.Core.Ui.Views.Dialogs.MarkerAssignmentDialog"
                      BackgroundColor="#B000">

    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Bottom"
            PositionOut="Top"/>
    </pages:PopupPage.Animation>

    <ContentPage.Resources>
        <converters:BoolNegateConverter x:Key="BoolNegateConverter" />
        <converters:MarkerDataToSvgFilenameConverter x:Key="MarkerDataToSvgFilenameConverter" />
    </ContentPage.Resources>

    <ContentPage.Content>
        <RelativeLayout HorizontalOptions="Center" VerticalOptions="Center">
            <pancakeView:PancakeView x:Name="Popup" CornerRadius="5" BackgroundColor="{DynamicResource PrimaryGreen}" Margin="0, 15">
                <StackLayout Padding="0" Margin="0">

                    <Label Text="Marker informations" TextColor="White" FontSize="Large" FontAttributes="Bold" Margin="8, 8, 0, 4" />

                    <StackLayout BackgroundColor="{DynamicResource DialogsBackgroundColor}" Padding="10, 5, 10, 10">
                        <StackLayout Orientation="Horizontal" Spacing="10">

                            <ffimageloadingsvg:SvgCachedImage HeightRequest="50" Margin="5, 0"
                                                              Source="{Binding Marker, Converter={StaticResource MarkerDataToSvgFilenameConverter}}"/>

                            <StackLayout VerticalOptions="Center" Spacing="0">
                                <Label Text="{Binding MarkerAssignment.PortalName}" FontAttributes="Bold" MaxLines="5" WidthRequest="250" />
                                <Label Text="{Binding Goal}" FontAttributes="Italic" />
                            </StackLayout>
                            <StackLayout HorizontalOptions="EndAndExpand">
                                <iconize:IconButton Text="mdi-map-marker" TextColor="{DynamicResource PrimaryGreen}" WidthRequest="30" HeightRequest="30" Padding="0"
                                                    BackgroundColor="Transparent" FontSize="24" HorizontalOptions="Start"
                                                    Command="{Binding ShowOnMapCommand}" />
                                <iconize:IconButton Text="mdi-map-search" TextColor="{DynamicResource PrimaryGreen}" WidthRequest="30" HeightRequest="30" Padding="0"
                                                    BackgroundColor="Transparent" FontSize="24" HorizontalOptions="Start"
                                                    Command="{Binding OpenInNavigationAppCommand}" />
                            </StackLayout>
                        </StackLayout>

                        <BoxView HeightRequest="1" BackgroundColor="LightGray" HorizontalOptions="FillAndExpand" />

                        <StackLayout>
                            <Label Text="{Binding Marker.State, StringFormat='State : {0}'}"/>
                            <StackLayout Orientation="Horizontal" HorizontalOptions="Center">
                                <Button Text="Ack" TextColor="White" BackgroundColor="{DynamicResource PrimaryOrange}"
                                    Command="{Binding AckCommand}" />
                                <Button Text="Done" TextColor="White" BackgroundColor="{DynamicResource PrimaryGreen}"
                                    Command="{Binding DoneCommand}"
                                    IsVisible="{Binding IncompleteEnabled, Converter={StaticResource BoolNegateConverter}}"/>
                                <Button Text="Undone" TextColor="White" BackgroundColor="{DynamicResource PrimaryRed}"
                                    Command="{Binding IncompleteCommand}"
                                    IsVisible="{Binding IncompleteEnabled}"/>
                            </StackLayout>
                        </StackLayout>
                    </StackLayout>

                </StackLayout>

            </pancakeView:PancakeView>

            <pancakeView:PancakeView BackgroundColor="{DynamicResource AccentColor}" WidthRequest="30" HeightRequest="30" CornerRadius="15"
                                     RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=Popup, Property=Width, Factor=1, Constant=-15}" 
                                     RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=Popup, Property=Y, Factor=1, Constant=-15}" >

                <iconize:IconButton Text="mdi-close" TextColor="White" FontAttributes="Bold" FontSize="25"
                                    HeightRequest="30" WidthRequest="30" Padding="0" Margin="0"
                                    BackgroundColor="Transparent"
                                    Command="{Binding CloseCommand}"/>
            </pancakeView:PancakeView>

        </RelativeLayout>
    </ContentPage.Content>

</views:BaseDialogPage>