<?xml version="1.0" encoding="utf-8" ?>
<views:BaseContentPage x:TypeArguments="teams:TeamDetailsViewModel" xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:views="clr-namespace:Rocks.Wasabee.Mobile.Core.Ui.Views;assembly=Rocks.Wasabee.Mobile.Core.Ui"
                       xmlns:teams="clr-namespace:Rocks.Wasabee.Mobile.Core.ViewModels.Teams;assembly=Rocks.Wasabee.Mobile.Core"
                       xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
                       xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
                       xmlns:iconize="clr-namespace:Plugin.Iconize;assembly=Plugin.Iconize"
                       xmlns:converters="clr-namespace:Rocks.Wasabee.Mobile.Core.Ui.Helpers.Converters;assembly=Rocks.Wasabee.Mobile.Core.Ui"
                       xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
                       x:Class="Rocks.Wasabee.Mobile.Core.Ui.Views.Teams.TeamDetailsPage"
                       x:Name="Page"
                       Title="{Binding Title}"
                       BackgroundColor="{DynamicResource BackgroundColorLevel0}">

    <ContentPage.Resources>
        <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <converters:BoolToTextConverter x:Key="BoolToTextConverter"/>
    </ContentPage.Resources>

    <ContentPage.Content>
        <RelativeLayout>
            <RefreshView IsRefreshing="{Binding IsRefreshing, Mode=OneWay}"
                         Command="{Binding RefreshCommand}"
                         VerticalOptions="FillAndExpand"
                         RefreshColor="{DynamicResource PrimaryGreenDark}"
                         Padding="10">

                <CollectionView x:Name="AgentsList"
                                RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
                                RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}"
                                ItemsSource="{Binding Team.Agents}"
                                SelectionMode="None">
                    <CollectionView.ItemsLayout>
                        <GridItemsLayout VerticalItemSpacing="10"
                                         Span="1"
                                         Orientation="Vertical"/>
                    </CollectionView.ItemsLayout>

                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <SwipeView>

                                <SwipeView.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="TapGestureRecognizer_OnTapped"/>
                                </SwipeView.GestureRecognizers>

                                <SwipeView.RightItems>
                                    <SwipeItemView IsVisible="{Binding ViewModel.IsOwner, Source={x:Reference Page}}">
                                        <Grid WidthRequest="60">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <BoxView CornerRadius="0,10,0,10" BackgroundColor="{DynamicResource PrimaryRed}"/>
                                            <iconize:IconImage Icon="mdi-trash-can-outline" IconSize="24" IconColor="White"/>
                                        </Grid>
                                    </SwipeItemView>
                                </SwipeView.RightItems>

                                <Frame Padding="10" Margin="0" CornerRadius="10" BackgroundColor="{DynamicResource BackgroundColorLevel1}">
                                    <Grid RowSpacing="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <ffimageloading:CachedImage Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
                                                                    WidthRequest="50" HeightRequest="50"
                                                                    Margin="0,0,20,0"
                                                                    Source="{Binding Pic}" Aspect="AspectFit">
                                            <ffimageloading:CachedImage.Transformations>
                                                <fftransformations:RoundedTransformation Radius="500"/>
                                            </ffimageloading:CachedImage.Transformations>
                                        </ffimageloading:CachedImage>

                                        <Label Grid.Column="1" Grid.Row="0" Text="{Binding Name}" FontAttributes="Bold" LineBreakMode="TailTruncation" MaxLines="1"/>
                                        <Label Grid.Column="1" Grid.Row="1" Text="{Binding Squad}" LineBreakMode="TailTruncation" MaxLines="1"/>

                                        <StackLayout Orientation="Horizontal" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
                                            <iconize:IconLabel Text="{Binding State, Converter={StaticResource BoolToTextConverter}, ConverterParameter=mdi-map-marker|mdi-map-marker-off}"
                                                               TextColor="{Binding State, Converter={StaticResource BoolToColorConverter}}"
                                                               BackgroundColor="Transparent"
                                                               FontSize="30"
                                                               HorizontalOptions="Center" VerticalOptions="Center" />

                                            <iconize:IconLabel Text="{Binding ShareWD, Converter={StaticResource BoolToTextConverter}, ConverterParameter=mdi-shield-key|mdi-shield-key-outline}"
                                                               TextColor="{Binding ShareWD, Converter={StaticResource BoolToColorConverter}}"
                                                               BackgroundColor="Transparent"
                                                               FontSize="30"
                                                               HorizontalOptions="Center" VerticalOptions="Center" />
                                        </StackLayout>
                                    </Grid>
                                </Frame>
                            </SwipeView>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </RefreshView>

            <Frame x:Name="PanelBackground" IsVisible="False" BackgroundColor="Transparent" BorderColor="Transparent" CornerRadius="0" Margin="0" HasShadow="False"
                   RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
                   RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}">
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer Tapped="PanelBackground_OnTapped"/>
                </Frame.GestureRecognizers>
            </Frame>

            <pancakeView:PancakeView x:Name="AddAgentPanel" BackgroundColor="{DynamicResource BackgroundColorLevel1}" CornerRadius="10, 10, 0, 0" Padding="10"
                                 RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-100}"
                                 RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
                                 RelativeLayout.HeightConstraint="{ConstraintExpression Type=Constant, Constant=100}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <iconize:IconButton Grid.Column="0" Text="mdi-format-text" FontSize="40"
                                        Style="{DynamicResource WasabeeStyleValidateButton}"
                                        Command="{Binding PromptAddUserAgentCommand}"/>

                    <iconize:IconButton Grid.Column="1" Text="mdi-qrcode" FontSize="40"
                                        Style="{DynamicResource WasabeeStyleValidateButton}"
                                        Clicked="ScanQrCodeButton_OnClicked"/>
                </Grid>
            </pancakeView:PancakeView>
        </RelativeLayout>
    </ContentPage.Content>
</views:BaseContentPage>